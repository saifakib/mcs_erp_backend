const { Execute } = require('../../../utils/dynamicController');


/*-------------------------------- SELECT --------------------------------*/

const getAllEntriesReports = (fdate, tdate) => Execute(`SELECT ST.PRONAME, ST.PRONAMETWO, LT.PROLISTID, LT.PRODATE, LT.MRRNUMBER, S.SUPPLIER, CT.CATEGORYEN, LT.QUANTITIES, LT.PROAMOUNT, LT.PROAMOUNT * LT.QUANTITIES as TOTALAMOUNT, U.UNIT FROM STR_PRODUCTENTRILISTS LT  LEFT OUTER JOIN STR_SUPPLIERS S ON LT.PRODUCTFROM = S.SUP_ID LEFT OUTER JOIN STR_STOREPRODUCTS ST ON ST.PROID = LT.PRODUCTIDNO LEFT OUTER JOIN STR_CATEGORIES CT ON CT.CAT_ID = ST.PROCATE LEFT OUTER JOIN STR_UNITS U ON ST.PRODUNIT = U.UNIT_ID WHERE LT.PRODATE >= '${fdate}' AND LT.PRODATE <= '${tdate}'`);


const getSingleEntriesReports = (productidno, fdate, tdate) => Execute(`SELECT ST.PRONAME, ST.PRONAMETWO, LT.PROLISTID, LT.PRODATE, LT.MRRNUMBER, S.SUPPLIER, CT.CATEGORYEN, LT.QUANTITIES, LT.PROAMOUNT, LT.PROAMOUNT * LT.QUANTITIES as TOTALAMOUNT, U.UNIT FROM STR_PRODUCTENTRILISTS LT  LEFT OUTER JOIN STR_SUPPLIERS S ON LT.PRODUCTFROM = S.SUP_ID LEFT OUTER JOIN STR_STOREPRODUCTS ST ON ST.PROID = LT.PRODUCTIDNO LEFT OUTER JOIN STR_CATEGORIES CT ON CT.CAT_ID = ST.PROCATE LEFT OUTER JOIN STR_UNITS U ON ST.PRODUNIT = U.UNIT_ID WHERE LT.PRODATE >= '${fdate}' AND LT.PRODATE <= '${tdate}' AND PRODUCTIDNO = ${Number(productidno)}`);


const stockStatus = () => Execute(`SELECT SP.PROID, SP.PRONAME, SP.PRONAMETWO, SP.PROQTY, C.CATEGORYEN FROM STR_STOREPRODUCTS SP LEFT OUTER JOIN STR_CATEGORIES C ON SP.PROCATE = C.CAT_ID ORDER BY PROID ASC`);


const getProductSummariesByProductid = (PROID) => Execute(`SELECT PS.SUMMDATE, PS.PRODUCTNAME, PS.INTIALQTY, PS.NEWADDQTY, PS.TOTALBALANCE, PS.TOTALOUT, PS.PRESENTBALANCE, P.NAME, P.DESIGNATION, P.DEPARTMENT, C.CATEGORYBN, C.CATEGORYEN FROM STR_PRODUCTSUMMARIES PS LEFT OUTER JOIN STR_PROFILES P ON PS.REQUISITIONFOR = P.PROFID LEFT OUTER JOIN STR_CATEGORIES C ON PS.PROCAT = C.CAT_ID  WHERE PS.PRODUCTID = ${PROID} ORDER BY PROSUMID ASC`);


const getProductSummariesBySummMonth = (SUMMMONTH) => Execute(`SELECT PS.SUMMDATE, PS.PRODUCTNAME, PS.INTIALQTY, PS.NEWADDQTY, PS.TOTALBALANCE, PS.TOTALOUT, PS.PRESENTBALANCE, P.NAME, P.DESIGNATION, P.DEPARTMENT, C.CATEGORYBN, C.CATEGORYEN FROM STR_PRODUCTSUMMARIES PS LEFT OUTER JOIN STR_PROFILES P ON PS.REQUISITIONFOR = P.PROFID LEFT OUTER JOIN STR_CATEGORIES C ON PS.PROCAT = C.CAT_ID  WHERE PS.SUMMMONTH = ${SUMMMONTH} ORDER BY PROSUMID ASC`);


const getProductSummariesBySummMonthAndCatId = (SUMMMONTH, CATID) => Execute(`SELECT PS.SUMMDATE, PS.PRODUCTNAME, PS.INTIALQTY, PS.NEWADDQTY, PS.TOTALBALANCE, PS.TOTALOUT, PS.PRESENTBALANCE, P.NAME, P.DESIGNATION, P.DEPARTMENT, C.CATEGORYBN, C.CATEGORYEN FROM STR_PRODUCTSUMMARIES PS LEFT OUTER JOIN STR_PROFILES P ON PS.REQUISITIONFOR = P.PROFID LEFT OUTER JOIN STR_CATEGORIES C ON PS.PROCAT = C.CAT_ID  WHERE PS.SUMMMONTH = ${SUMMMONTH} AND PS.PROCAT = ${Number(CATID)} ORDER BY PROSUMID ASC`);

const getProductSummariesByCatId = (CATID) => Execute(`SELECT PS.SUMMDATE, PS.PRODUCTNAME, PS.INTIALQTY, PS.NEWADDQTY, PS.TOTALBALANCE, PS.TOTALOUT, PS.PRESENTBALANCE, P.NAME, P.DESIGNATION, P.DEPARTMENT, C.CATEGORYBN, C.CATEGORYEN FROM STR_PRODUCTSUMMARIES PS LEFT OUTER JOIN STR_PROFILES P ON PS.REQUISITIONFOR = P.PROFID LEFT OUTER JOIN STR_CATEGORIES C ON PS.PROCAT = C.CAT_ID  WHERE PS.PROCAT = ${Number(CATID)} ORDER BY PROSUMID ASC`);
/*--------------------------------END SELECT --------------------------------*/







module.exports = {
    getAllEntriesReports,
    getSingleEntriesReports,
    stockStatus,
    getProductSummariesByProductid,
    getProductSummariesBySummMonth,
    getProductSummariesByCatId,
    getProductSummariesBySummMonthAndCatId
}